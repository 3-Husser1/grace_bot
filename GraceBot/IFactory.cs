using Microsoft.Bot.Connector;
using System;
using System.Threading.Tasks;

namespace GraceBot
{
    internal interface IFactory
    {
        /// <summary>
        /// Respond to an activity as an asynchronous operation.
        /// </summary>
        /// <param name="replyText">The text as a reply.</param>
        /// <param name="originalActivity">The activity to reply to.</param>
        /// <returns></returns>
        Task<Activity> RespondAsync(string replyText, Activity originalActivity);

        /// <summary>
        /// Get user state as an asynchronous operation.
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="property"></param>
        /// <param name="activity">The activity generated by the user.</param>
        /// <returns></returns>
        Task<T> GetUserDataPropertyAsync<T>(string property, Activity activity);

        /// <summary>
        /// Update user state as an asynchronous operation.
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="property"></param>
        /// <param name="data"></param>
        /// <param name="activity">The activity generated by the user.</param>
        /// <returns></returns>
        Task SetUserDataPropertyAsync<T>(string property, T data, Activity activity);

        /// <summary>
        /// Delete user state as an asynchronous operation.
        /// </summary>
        /// <param name="activity"></param>
        /// <returns></returns>
        Task<string[]> DeleteStateForUserAsync(Activity activity);

        IApp GetApp();

        IDefinition GetActivityDefinition();

        IFilter GetActivityFilter();

        IHttpClient GetHttpClient();

        IDbManager GetDbManager();

    }
}
